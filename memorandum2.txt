刘杰老师    QQ：36662524
                     手机号码：133  0734  8312
                     办公室：8-407

以后的研究方向改为“软件测试”下的“组合测试”
（自2017.6.21起，半年内发一篇论文）

暑假目标：组合测试技术综述
今后的大方向：组合测试解决合约问题（每个接口的规范问题，接口太多，这是一个NP-难问题）
文献阅读技巧：不必太过细致，了解论文解决了什么问题，用了什么方法即可，需要的时候再去细翻

组合测试研究的三个层次：
数学逻辑推理证明理论
测试用例运行证明理论
满足实际需求，解决当前技术无法解决的问题

命题逻辑是对事物性质的刻画。

合约只是对约束进行了更细致的划分。

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
暑假目标：
基于布尔表达式、合约和约束的测试用例生成的研究综述

工作重点需要了解掌握三个方向：
一是逻辑表达式的在系统中的地位和作用；
二是逻辑表达式在测试中的应用，以及面临的困难是什么？
三是解决这些问题所采用的策略和局限性。
这些内容不一定要深读论文技术细节，可以通过他们的摘要，结论及其它论文的评价获得。

布尔表达式生成组合测试用例的三个问题：
1、布尔表达式怎样生成测试用例？
2、什么时候需要布尔表达式？
3、布尔表达式生成测试用例有哪些要求？
根据这三个要求找资料，写文献综述，找到的资料发给刘老师，让他过目一下，确定有没有必要阅读

文献阅读技巧：
了解论文的主旨――解决了什么问题，用了什么技术方法――即可，不必深入了解技术细节，需要的时候再去细翻。

查文献可以运用百度学术
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2017.8.8之后的任务：
1、解决两个问题：（1）命题逻辑（逻辑表达式）出自哪里？即命题逻辑（逻辑表达式）的使用场景是什么？
                                     （2）除了合约和故障检测以外，命题逻辑是否还有其他出处？
       其他一些提到的问题：除了命题逻辑，测试用例生成是否还涉及谓词逻辑？后期做时序逻辑的测试用例生成研究。
2、要跳出《基于故障的布尔表达式测试技术综述》这篇文献的内容。
3、一边阅读文献，一边开始动手写综述。半天时间看文献，半天时间写综述。

以后一周做一次汇报（2017.8.15、22、29）
投综述的第一目标是《计算机科学》，最迟到 9 月份要投出综述。
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2017.8.30进行了一次谈话：
“基于约束的测试生成方法：（1）根据约束生成测试用例；（2）根据约束筛选测试用例”
以这个看法作为两条主线，组合看过的文献，将其归纳到这两条主线中；
细化分类不重要，重要的是这两条主线；
对看过的文献，比较各种方法的优劣，进行点评，无法比较的就简单介绍一下；
约束的分类：合约、故障约束。

投文献的事不能拖到10月份，后面还有事。
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2017.8.31进行了一次电话通话：
约束的组织分类
各篇文献利用约束生成测试用例
合约不重要，重要的是约束

注意文献中的方法缺陷，方便确定未来的工作方向
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2017.9.3进行了一次电话通话：
根据两条主线，核心是“约束求解”，分为哪些技术流派，它们研究的问题，哪些是“真问题”，哪些是“假问题”
以此进行归纳，从而写好综述中的“未来展望”，还可以借此确认后面的研究方向
可以参考文献中对其他文献内容的介绍和总结，结合自己的看法，添加到综述中

现在开始收，真正动手写综述，争取把第一篇论文写好一些，为后面的工作打下基础。
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2017.9.6去食堂的路上碰到刘杰老师，简单汇报了一下：
基于“根据约束生成测试用例”这条主线，大致分为两个技术流派：
1）使用算法生成测试用例
       （1）根据逻辑覆盖准则
2）使用约束求解器生成测试用例

基于“根据约束筛选测试用例”这条主线，目前没有头绪
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2017.9.11在计算机学院外碰到刘杰老师，简单汇报了一下

下午在QQ上进行了汇报
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2017.9.20进行了一次电话通话：
重点：“代表性”
从测试出发，不同约束的代表性也不同，“约束代表了什么？”、“约束的解代表了什么？”
约束的解的性能受到不同约束求解方法的限制
将自己的看法轮廓嵌入到文章中
找几篇博士硕士论文看看，理解“测试”的意义

所有的测试用例生成都是为了找到具有代表性的用例，都是为了满足成本约束。
文中提到成本约束是多余的。
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2017.9.23进行了一次电话通话：
1、测试目标。条件覆盖等逻辑覆盖准则只是最基本的要求，不能作为测试目标；
       要突出本文的特点；
       布尔表达式那一块都是为故障检测。
2、每个方法都只是针对某一方面，对于那些方法，不需要详细说明，指明特点或优势即可；
       不用在意技术细节，这是下一阶段需要关注的问题；
       引用文献时，可以借用他人对该方法的看法，根据自己的研究重点进行分析后在转述。
       有时候引用一篇文献只是列一个名词在那里；
       另外，要注意说“行（hang）话”，即书写时要注意用词，使用学术名词，不能太过通俗。
3、最难的是指出未来的研究发展方向。
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2017.9.29进行了一次电话通话：
1、逻辑覆盖准则的包容层次结构图换成圈。
2、布尔表达式有什么特点（如结构等），它为什么能用于故障检测；
       从布尔表达式的角度，而不是从故障检测的角度出发；
       文章重点是布尔表达式和约束。
3、用例生成的方法点评要更深入；
       找一些用例生成的文章（可以不是约束方面的），看看它们的点评有什么特点，有没有什么规律；
       深入了解不同的方法特点才能明白未来的研究方向。

以上三点是重点。

4、相关工具和平台的收集
5、时序逻辑相关的用例生成；
       注意文献中有没有提及这方面，收集相关文献。
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2017.10.9进行了一次电话通话：
1、前面的归类是对的：
                                                                                       |――>根据具体情境设计算法生成测试用例
                          |――>通过约束生成测试用例――> |
       三类――> |                                                             |――>提取约束，使用约束求解器生成测试用例
                          |――>通过约束筛选测试用例
       所有工作往这三类上靠
2、故障也是一种情境
3、布尔表达式分为正确的布尔表达式和涵盖了故障布尔表达式
4、约束求解是一个NP-完全问题
       缩小解空间
5、“图”这一块先不管
6、后面考虑“测试用例来源”这个问题
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2017.10.24进行了一次电话通话：
1、约束的定义，需要详细界定（之前对约束的理解有误）
		约束是对系统性质的描述，根据描述生成测试用例，符合描述方式的测试用例自然可以检测系统性质
		系统性质包括功能性、安全性、故障性等
		约束――>形式归约（逻辑表达式）
		
2、对于约束，有些能以逻辑表达式描述，有些不能
		本文以逻辑表达式描述约束，逻辑表达式包括命题逻辑表达式、谓词逻辑表达式等
		以命题逻辑表达式描述系统性质，则逻辑表达式的求解是一个SAT问题
注：（1）若不考虑SAT问题，则系统可以直接用逻辑（命题逻辑、谓词逻辑等）表示。
		（2）“图”这一块不用管，因为“图”也可以转换为逻辑表达式，之所以用“图”表示，是因为这样更直观而已

3、本文的核心是“对SAT问题求解”
		直接对SAT问题进行求解太过困难，可以从某一方面着手，减小问题空间
		例如：基于故障的测试方法只考虑特定的故障类型，忽略其它，通过排除法确定系统不包含某些故障
						这种方法只是故障检测的其中一种方法
		由此生成的测试用例，需要判断其是否为最优解，这个时候则使用覆盖准则等来衡量其性能。

4、文中“通过约束生成测试用例，根据具体情境设计算法”
		此处的情境需要仔细考虑，故障情境没错，考虑的是系统的故障性，其它情境需要重新考虑

5、文章思路：
		第一章：不谈软件测试，直接谈测试用例的生成方法
							提出约束的概念，给出详细定义（一些相关的概念也要说明）
							点明“基于约束的测试用例生成”方法的优缺点
							写明本文的目的
		第二章：预备知识
		第三章：通过约束生成测试用例――>具体情境
		……

6、综上，目前版本的文章缺陷是约束理解有误，没有明确的核心，涉及范围过广过大
		当前任务是开始收拢，回顾之前看过的文献，重新确定其中提及的具体情境，
		并深入其中，理解清楚其方法的优缺点，并明白进一步的研究方向，这样才能找到下一篇论文的研究点
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2017.11.11进行了一次电话通话：
1、系统性质限制系统行为
		约束与具体系统形式息息相关，从系统具体形式出发，阐述约束
		在不同形式的系统中，约束形式虽然都是布尔表达式，但是约束意义即约束表现的系统性质不同，使用约束的技术也不同，不能脱离具体背景环境谈论约束
		
		系统形式包括底层代码、不同模型，以及形式归约等（也可分为软件工程说明书、程序等）
		必须在宏观上说明约束在不同形式系统中的作用，例如：之前的论文只是从原子层面阐明人体结构，还要上升到宏观层面，即原子组成的结构是什么，是手，是脚，还是其它组织，以及它们对人的具体作用
		
2、本文重点是约束，要把约束讲透
		先讲约束，再谈其它
		讲清楚约束以后，自然而然地过渡到测试用例生成
3、“预备知识”这一节的内容可以打散后融入到后文，取消这一节
		CSP即约束满足问题这个概念不需要明确提出，只需点明要满足约束即可
		变异分析是一种测试充分性准则，用于评估测试用例，不是求解思路
		筛选也是一种策略，考虑其作用，重构论文框架
4、（具体情景）基于约束的求解思路：
		基于故障的测试，重构，没必要像那篇综述一样写太细，为约束服务，有些重点描述，有些一笔带过
		组合测试（包括因素组合、取值组合），因素表示约束具体意义
		基于模型的测试
		
		以上三者都要阐明它们与约束的关系
		
		基于约束的求解技术：
		符号执行（求解器）
		基于搜索的测试（求解器）
		
5、测试用例自动生成――>基于约束的测试用例生成（其实不一定非要自动生成，半自动也可以）
		总的思路，即考虑四个方面：测试目标、约束形式、系统形式、技术手段
		其实每个情景就是这四个方面的某一方面方式变化，而后重新对这四个方面进行研究
		必须交代清楚这四者
6、后续任务：
		（1）理清思路
		（2）先写开题报告《基于时序逻辑的测试用例生成》，这其实就是在测试用例生成是考虑时间约束，思路不变，还是那四个方面
					开题报告主要是把问题讲清楚，然后指出要使用的技术
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2017.11.11进行了一次电话通话：
时序逻辑只是时间约束的表现形式，这不是重点，重点是时间约束
根据之前的框架，即测试目标、约束形式、系统形式、技术手段，理解时间约束
时间约束，即：不满足A，则满足B

论文看得已经差不多了，目前先仔细思考那个框架
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2017.11.21进行了一次电话通话：
根据以下五个步骤，每个步骤思考是什么、为什么、怎么做；
1、先讲清楚模型及性质，据此确定目标，能测什么测什么，从能测的东西中选一个目标，而不是从一开始就定目标。
2、确定模型之后，确定“约束”本身约束的是什么，约束了变量的那些行为。
		模型：描述系统行为和特征
		约束：限制变量的变化
		约束在模型中的位置及约束本身的意义，这两者确定了约束在模型之中的责任，以及测试目标，
		所谓位置，例如：程序中，输入中的变量，路径中的变量
3、确定测试目标
		约束作为分支条件――>路径覆盖
		                输入条件――>输入覆盖，分为合法、非法
4、自动化方法
		既要考虑模型的特征，又要考虑约束的特征，由此提出技术路线
5、测试用例的有效性验证
		故障检测能力评估、与其它方法进行对比等
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2017.12.11进行了一次谈话：
1、论文的思路框架：
		给“约束”和“测试用例”（这两个概念是论文核心）下定义，建立这两者之间的关系
		约束：功能、形式、模型（背景）
		测试用例：类型（黑盒、白盒）、好坏（故障覆盖能力等）

		约束有许多种，测试用例有许多种
		将它们看作一个个的集合，本文的目的就是建立代表“约束”的集合与代表“测试用例”的集合之间的映射关系，
		在进行这项工作时，需要思考：若“约束1”与“测试用例集A”已有映射关系，那“约束1”与其它测试用例集是否也能建立映射关系

		注：自己下定义时，必须客观、清楚（先不考虑全面性的问题），尽量使用数学符号，用科学语言描述

2、在给概念下定义时，若当前概念没有专家下过定义，就看它的上一层次或下一层次概念的定义，用别人的概念来解释自己的概念
		例：“命题逻辑”下一层次的概念是“原子命题”

3、布尔表达式是命题逻辑公式
		谓词逻辑中的谓词以及“存在”、“所有”这样的量词在程序中不存在，因此程序中没有谓词逻辑公式，只有命题逻辑公式
		
4、论点：“通过约束可以生成测试用例”
		论文列出论据时要说明该论点的研究现状与待解决的问题。
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2017.12.20进行了一次电话通话：
1、深入理解什么是软件约束，及其形式、作用，约束的作用与其所处模型位置有关
2、深入理解什么是测试用例，及其测试目标等性质
以上两点分别做两个表格
写一篇说明文“什么是软件约束”
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
……
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2018.4.18进行了一次电话通话：
1、测试用例生成方法换个指标，修改一下，组合一下
		合约只是一个手段
		围绕基本问题：测试用例的基本问题是“只能取子集”，以此针对特定问题，指标可以区分不同子集
2、出论文最快的途径――改进已有方法：
（1）方法很好，用到其它地方；
（2）方法不够好，换个指标，提升它在其它指标上的性能；
3、当前任务：
		从之前看过的论文中，找一篇最熟悉的论文，看看可以改进的地方
		找出一个需要解决的问题
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2018.4.20进行了一次电话通话：
1、第一步不考虑该算法的优化
		第一篇论文直接运用该方法到组件交互测试中
		在组件合约背景下，这是一个……问题
2、第二篇论文考虑改进
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2018.4.23在8-201进行了一次汇报：
1、组件调用结构：顺序结构、分支结构、循环结构。
		这三种结构够不够？还有没有其它结构？如果有，能否归入这三种结构？
		这些调用结构是体现在哪里？流程图？控制流图？
2、获取调用结构
		覆盖率是针对组件调用序列树，《Enhancing Constraint based Test Generation by Local Search》这篇论文中的覆盖率是针对符号执行的执行树
		程序概念系统：约束、语句
		组件概念系统：合约、组件
		程序的三种基本结构在组件系统中是否存在，若不存在，则要下定义
3、做实验，体现有效性和优势
		调用关系覆盖，为什么要做这个，不做会怎么样？
		程序的分支覆盖是公认的，而这个调用关系覆盖要想一个背景出来，换一个名词
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2018.5.3在8-407进行了一次汇报：
研究过程：问题是什么？目标是什么？标准是什么？解决方法是什么？
1、问题背景
		集成测试：是什么？为什么？
		要讲清楚使用的模型和集成测试之间的关系
2、目标是什么
		实现自动化
		测试目标是“交互关系覆盖”（使用这个名词不够准确，交互是两个组件间的交互，而执行树是一堆组件的交互，阅读文献，换一个名词，找到更准确的描述）
3、标准（标准的依据是对性能的要求）
		例如：要做“加法”的测试，“3+4”是否可以作为测试用例，是否有效？怎么判断？需要标准
		若将标注设为“两个整数的加法”，则“3+4”可以
		也可以将这个“标准”理解为“研究范围”，但不够准确。测试用例只能去子集，需要代表性数据，判断代表性的“标准”是什么，取子集时划分“研究范围”的“标准”是什么？
		代表性数据和性能指标之间有关联关系。
4、解决方法
		基于约束的测试方法

补充：
（1）集成是将模块组装，使系统功能逐步完善
			每个组件只有部分功能，通过组件间的协作实现系统功能
（2）人工方法、自动化方法：
			先把人工方法讲清楚，在实现自动化的过程中，约束无法完美描述系统性质，此时需要进行补充定义，或部分修改人工方法，使其满足自动化要求
（3）当前任务：
			先把研究过程讲清楚，进行清晰准确的描述，然后才是写论文，论文是研究的成果，而研究是一个逐步求精的过程，可以在研究过程中添加各种定义，而不是上来就直接给定义，这样的定义很有可能在后面用不上
			（搞清楚要研究的问题后，找相关文献也容易得多；要跟着研究过程走，而不是跟着论文结构走，把问题、目标和标准的概念搞清楚了，后面工作就好做了）
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



QQ汇报记录：
2017.7.3
2017.7.13
2017.7.21
2017.7.30
2017.8.8
2017.8.15
2017.8.24
2017.9.11
2017.9.18
2017.9.27
2017.10.8
2017.10.16
2017.10.23
2017.11.1
2017.11.10
2017.11.16（11月份主要任务是完成开题报告）
2017.12.9
2017.12.20
2017.12.21
2017.12.23
2017.12.26
2017.12.28
2017.12.30
2018.1.7
2018.1.16
……
2018.4.18
2018.4.20
2018.4.23